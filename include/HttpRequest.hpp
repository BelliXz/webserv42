
#include "Core.hpp"

class HttpRequest 
{
    public:

        std::string             filename;                   // ‚úÖ ‡∏ä‡∏∑‡πà‡∏≠‡πÑ‡∏ü‡∏•‡πå‡∏ó‡∏µ‡πà‡∏ñ‡∏π‡∏Å‡πÄ‡∏£‡∏µ‡∏¢‡∏Å ‡πÄ‡∏ä‡πà‡∏ô "/images/logo.png" ‚Üí "logo.png"
        std::string             method;                     // ‚úÖ HTTP method ‡πÄ‡∏ä‡πà‡∏ô "GET", "POST", "DELETE"
        std::string             path;                       // ‚úÖ URL path ‡πÄ‡∏ä‡πà‡∏ô "/", "/login", "/images/logo.png"
        std::string             query;                      // ‚úÖ ‡∏™‡πà‡∏ß‡∏ô query string ‡∏´‡∏•‡∏±‡∏á "?" ‡πÄ‡∏ä‡πà‡∏ô "?id=5&name=foo"     //&
        std::string             version;                    // ‚úÖ HTTP version ‡πÄ‡∏ä‡πà‡∏ô "HTTP/1.1"
        std::string             body;                       // ‚úÖ ‡πÄ‡∏ô‡∏∑‡πâ‡∏≠‡∏´‡∏≤‡∏Ç‡∏≠‡∏á request (‡πÉ‡∏ä‡πâ‡∏Å‡∏±‡∏ö POST/PUT)
        std::vector<char>       rawBody;                    // ‚úÖ ‡∏™‡∏≥‡πÄ‡∏ô‡∏≤ raw body (‡πÉ‡∏ä‡πâ‡πÄ‡∏Å‡πá‡∏ö binary ‡∏´‡∏£‡∏∑‡∏≠ upload ‡πÑ‡∏î‡πâ)
        std::string             contenttype;                // ‚úÖ ‡∏Ñ‡πà‡∏≤ Content-Type ‡∏à‡∏≤‡∏Å header ‡πÄ‡∏ä‡πà‡∏ô "text/html", "application/json"
        std::string             cookie;                     // ‚úÖ ‡∏Ñ‡πà‡∏≤ Cookie ‡∏à‡∏≤‡∏Å header ‡πÄ‡∏ä‡πà‡∏ô "PHPSESSID=abc123"
        std::map<std::string, std::string> headers;         // ‚úÖ ‡πÄ‡∏Å‡πá‡∏ö header ‡∏ó‡∏∏‡∏Å‡∏ö‡∏£‡∏£‡∏ó‡∏±‡∏î‡πÄ‡∏õ‡πá‡∏ô key-value ‡πÄ‡∏ä‡πà‡∏ô {"Host": "localhost"}
        bool                    complete;       // = false  // ‚úÖ ‡πÉ‡∏ä‡πâ‡∏£‡∏∞‡∏ö‡∏∏‡∏ß‡πà‡∏≤ parsing ‡∏™‡∏°‡∏ö‡∏π‡∏£‡∏ì‡πå‡πÑ‡∏´‡∏°
        size_t                  contentLength;  // = 0      // ‚úÖ ‡∏Ñ‡πà‡∏≤‡∏à‡∏≤‡∏Å header "Content-Length" (‡∏à‡∏≥‡∏ô‡∏ß‡∏ô byte ‡πÉ‡∏ô body)


        HttpRequest() 
            : complete(false), contentLength(0) 
        {}
};



// ‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢‡∏™‡πà‡∏ß‡∏ô‡∏õ‡∏£‡∏∞‡∏Å‡∏≠‡∏ö‡∏Ç‡∏≠‡∏á HTTP Request ‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß‡∏Ç‡πâ‡∏≠‡∏á:
// ‚úÖ 1. Request Line
//     GET /hello?id=5 HTTP/1.1

// method  ‚Üí "GET"
// path    ‚Üí "/hello"
// query   ‚Üí "id=5"
// version ‚Üí "HTTP/1.1"


// ‚úÖ 2. Headers
//     Host: localhost:8080
//     Content-Type: text/html
//     Content-Length: 45
//     Cookie: session=abc123

// ‡πÄ‡∏Å‡πá‡∏ö‡πÉ‡∏ô:
// headers["Host"] = "localhost:8080"
// contenttype = "text/html"
// cookie = "session=abc123"
// contentLength = 45


// ‚úÖ 3. Body (‡πÄ‡∏ä‡πà‡∏ô POST/PUT)
//     name=kit&email=kit@example.com

// ‡πÄ‡∏Å‡πá‡∏ö‡πÉ‡∏ô:
// body = "name=kit&email=kit@example.com"
// rawBody ‡πÄ‡∏Å‡πá‡∏ö‡πÉ‡∏ô‡∏£‡∏π‡∏õ binary ‡∏î‡πâ‡∏ß‡∏¢ (‡πÄ‡∏ä‡πà‡∏ô upload ‡πÑ‡∏ü‡∏•‡πå)

// ‚úÖ 4. Extra: filename
//     ‡∏´‡∏≤‡∏Å path ‡∏Ñ‡∏∑‡∏≠ /images/logo.png ‚Üí filename = "logo.png"
//     ‡∏ñ‡πâ‡∏≤ path = / ‚Üí filename = "index.html" (default fallback)


// üí° ‡∏Å‡∏≤‡∏£‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏à‡∏£‡∏¥‡∏á:
// ‡∏Ñ‡∏∏‡∏ì‡∏™‡∏≤‡∏°‡∏≤‡∏£‡∏ñ‡πÉ‡∏ä‡πâ‡πÇ‡∏Ñ‡∏£‡∏á‡∏™‡∏£‡πâ‡∏≤‡∏á‡∏ô‡∏µ‡πâ‡πÄ‡∏û‡∏∑‡πà‡∏≠:

// ‡πÉ‡∏ä‡πâ‡∏ó‡∏≥‡∏≠‡∏∞‡πÑ‡∏£	          ‡∏ï‡∏±‡∏ß‡πÅ‡∏õ‡∏£‡∏ó‡∏µ‡πà‡πÄ‡∏Å‡∏µ‡πà‡∏¢‡∏ß
// Routing	            method + path
// Auth/Cookie	        headers + cookie
// ‡πÇ‡∏´‡∏•‡∏î static file	    filename
// ‡∏ï‡∏£‡∏ß‡∏à body upload	    contentLength + contenttype + rawBody
// log request	        headers + method + path
// ‡∏ï‡∏£‡∏ß‡∏à error	        ‡πÉ‡∏ä‡πâ method/path/version/check headers

// üìå ‡∏™‡∏£‡∏∏‡∏õ
// Field	                ‡∏õ‡∏£‡∏∞‡πÇ‡∏¢‡∏ä‡∏ô‡πå
// method, path, version	‡πÉ‡∏ä‡πâ routing ‡πÅ‡∏•‡∏∞‡∏ï‡∏£‡∏ß‡∏à format
// headers	                ‡πÄ‡∏Å‡πá‡∏ö‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏•‡∏™‡∏≥‡∏Ñ‡∏±‡∏ç ‡πÄ‡∏ä‡πà‡∏ô Content-Type, Cookie, Content-Length
// body	                    ‡πÉ‡∏ä‡πâ‡πÉ‡∏ô POST, PUT
// rawBody	                ‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö binary ‡πÄ‡∏ä‡πà‡∏ô upload ‡πÑ‡∏ü‡∏•‡πå
// contenttype	            ‡πÉ‡∏ä‡πâ‡∏ö‡∏≠‡∏Å‡∏ä‡∏ô‡∏¥‡∏î‡∏Ç‡πâ‡∏≠‡∏°‡∏π‡∏• ‡πÄ‡∏ä‡πà‡∏ô application/json
// cookie	                ‡πÉ‡∏ä‡πâ‡∏™‡∏≥‡∏´‡∏£‡∏±‡∏ö session ‡∏´‡∏£‡∏∑‡∏≠ auth
// filename	                ‡πÉ‡∏ä‡πâ‡πÇ‡∏´‡∏•‡∏î static file
// complete	                ‡πÄ‡∏ä‡πá‡∏Å‡∏ß‡πà‡∏≤‡∏û‡∏£‡πâ‡∏≠‡∏°‡πÉ‡∏ä‡πâ‡∏á‡∏≤‡∏ô‡∏´‡∏£‡∏∑‡∏≠‡∏¢‡∏±‡∏á
// query	                ‡πÉ‡∏ä‡πâ‡πÅ‡∏¢‡∏Å‡∏û‡∏≤‡∏£‡∏≤‡∏°‡∏¥‡πÄ‡∏ï‡∏≠‡∏£‡πå‡πÉ‡∏ô URL



// ‡∏ï‡∏±‡∏ß‡∏≠‡∏¢‡πà‡∏≤‡∏á HTTP Request ‡∏´‡∏•‡∏≤‡∏¢‡∏Å‡∏£‡∏ì‡∏µ ‡∏ó‡∏±‡πâ‡∏á GET, POST, DELETE 
// ‡∏û‡∏£‡πâ‡∏≠‡∏°‡∏Ñ‡∏≥‡∏≠‡∏ò‡∏¥‡∏ö‡∏≤‡∏¢ ‡πÅ‡∏•‡∏∞ mapping ‡∏Å‡∏±‡∏ö field ‡πÉ‡∏ô HttpRequest class ‡∏Ç‡∏≠‡∏á‡∏Ñ‡∏∏‡∏ì

// üü¢ 1. GET Request (‡∏ó‡∏±‡πà‡∏ß‡πÑ‡∏õ)
//     GET /home HTTP/1.1
//     Host: localhost:8080
//     User-Agent: curl/7.68.0
//     Accept: */*

// Field	                ‡∏Ñ‡πà‡∏≤
// method	                "GET"
// path	                "/home"
// version	                "HTTP/1.1"
// headers["Host"]	        "localhost:8080"
// headers["User-Agent"]	"curl/7.68.0"
// body	                (‡∏ß‡πà‡∏≤‡∏á)
// query	                (‡∏ß‡πà‡∏≤‡∏á)
// complete	            true


// üü° 2. GET Request with Query Parameters
//     GET /search?q=hello&page=2 HTTP/1.1
//     Host: localhost:8080

// Field	                ‡∏Ñ‡πà‡∏≤
// path	                "/search"
// query	                "q=hello&page=2"
// filename	            "search"


// üîµ 3. POST Request (Form Data)
//     POST /login HTTP/1.1
//     Host: localhost:8080
//     Content-Type: application/x-www-form-urlencoded
//     Content-Length: 29

//     username=admin&password=1234

// Field	        ‡∏Ñ‡πà‡∏≤
// method	        "POST"
// path	        "/login"
// contenttype	    "application/x-www-form-urlencoded"
// contentLength	29
// body	        "username=admin&password=1234"
// rawBody	        ‡πÅ‡∏ö‡∏ö binary

// üî¥ 4. POST JSON
//     POST /api/data HTTP/1.1
//     Host: localhost:8080
//     Content-Type: application/json
//     Content-Length: 45

//     {"name": "kit", "email": "kit@example.com"}

// Field	        ‡∏Ñ‡πà‡∏≤
// contenttype	    "application/json"
// body	        JSON string

// üü§ 5. DELETE Request
//     DELETE /user/123 HTTP/1.1
//     Host: localhost:8080

// Field	        ‡∏Ñ‡πà‡∏≤
// method	        "DELETE"
// path	        "/user/123"
// filename	    "123"


// üü£ 6. Forbidden (‡πÉ‡∏ä‡πâ path ‡∏ó‡∏µ‡πà‡πÑ‡∏°‡πà‡∏≠‡∏ô‡∏∏‡∏ç‡∏≤‡∏ï)
//     GET /secret HTTP/1.1
//     Host: localhost:8080

// Field	        ‡∏Ñ‡πà‡∏≤
// path	        "/secret"
// ‚Üí ‡∏™‡πà‡∏á‡∏Å‡∏•‡∏±‡∏ö	        403 Forbidden


// ‚ö´Ô∏è 7. Malformed Request (‡∏ú‡∏¥‡∏î syntax)
//     GIBBERISH data here

// ‡∏ú‡∏•‡∏ó‡∏µ‡πà‡∏Ñ‡∏ß‡∏£‡πÄ‡∏õ‡πá‡∏ô	    400 Bad Request
// ‡πÄ‡∏û‡∏£‡∏≤‡∏∞ method, path, version ‡πÅ‡∏¢‡∏Å‡πÑ‡∏°‡πà‡πÑ‡∏î‡πâ‡∏à‡∏≤‡∏Å request line	

// üü† 8. Method Not Allowed
//     UT /update HTTP/1.1
//     Host: localhost:8080

// | method | "PUT" |
// | ‚Üí ‡∏™‡πà‡∏á‡∏Å‡∏•‡∏±‡∏ö | 405 Method Not Allowed (‡∏£‡∏≠‡∏á‡∏£‡∏±‡∏ö‡πÄ‡∏â‡∏û‡∏≤‡∏∞ GET, POST, DELETE) |

// üü¢ 9. With Cookie
//     GET /dashboard HTTP/1.1
//     Host: localhost:8080
//     Cookie: sessionid=xyz123; theme=dark

// Field	        ‡∏Ñ‡πà‡∏≤
// cookie	        "sessionid=xyz123; theme=dark"

// üí° Tip: ‡πÉ‡∏ô‡∏Å‡∏≤‡∏£‡∏ó‡∏î‡∏™‡∏≠‡∏ö: ‡πÉ‡∏ä‡πâ curl:
//     curl -X POST -d "user=abc" http://localhost:8080/login

// ‡∏´‡∏£‡∏∑‡∏≠‡πÄ‡∏Ç‡∏µ‡∏¢‡∏ô request ‡∏°‡∏∑‡∏≠‡πÉ‡∏ô telnet/nc:
//     nc localhost 8080
//     ‡πÅ‡∏•‡πâ‡∏ß‡∏û‡∏¥‡∏°‡∏û‡πå‡∏ï‡∏≤‡∏° format



